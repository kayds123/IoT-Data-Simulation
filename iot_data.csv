{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d2624a33-1053-4e6b-8b47-d55eabf8598d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    Sensor ID  Temperature (°C)  Humidity (%)  Air Quality Index (AQI)  \\\n",
      "0    Sensor_1             17.96            51                      133   \n",
      "1    Sensor_2             26.26            53                       51   \n",
      "2    Sensor_3             27.07            49                       53   \n",
      "3    Sensor_4             27.94            48                      108   \n",
      "4    Sensor_5             27.96            54                       57   \n",
      "5    Sensor_6             28.31            62                      108   \n",
      "6    Sensor_7             28.82            60                       99   \n",
      "7    Sensor_8             29.38            65                      121   \n",
      "8    Sensor_9             22.80            43                       92   \n",
      "9   Sensor_10             27.90            44                       81   \n",
      "10  Sensor_11             17.43            58                       84   \n",
      "11  Sensor_12             19.91            53                      162   \n",
      "12  Sensor_13             21.05            50                      186   \n",
      "13  Sensor_14             26.52            51                       97   \n",
      "14  Sensor_15             22.16            75                      160   \n",
      "15  Sensor_16             19.97            71                      197   \n",
      "16  Sensor_17             22.35            77                      106   \n",
      "17  Sensor_18             16.85            76                      161   \n",
      "18  Sensor_19             16.42            48                       57   \n",
      "19  Sensor_20             28.23            47                      154   \n",
      "20  Sensor_21             18.70            45                      150   \n",
      "21  Sensor_22             17.29            66                       63   \n",
      "22  Sensor_23             21.53            61                      100   \n",
      "23  Sensor_24             28.92            53                      151   \n",
      "24  Sensor_25             19.77            66                      110   \n",
      "25  Sensor_26             26.81            66                       67   \n",
      "26  Sensor_27             21.59            51                      120   \n",
      "27  Sensor_28             18.52            52                      174   \n",
      "28  Sensor_29             20.03            53                      119   \n",
      "29  Sensor_30             19.19            73                      146   \n",
      "30  Sensor_31             21.34            80                      107   \n",
      "31  Sensor_32             29.50            58                      122   \n",
      "32  Sensor_33             17.27            75                      166   \n",
      "33  Sensor_34             22.55            69                      110   \n",
      "34  Sensor_35             27.88            69                      176   \n",
      "35  Sensor_36             23.96            56                       94   \n",
      "36  Sensor_37             18.77            52                      153   \n",
      "37  Sensor_38             29.50            70                      195   \n",
      "38  Sensor_39             17.64            41                       95   \n",
      "39  Sensor_40             20.24            50                       50   \n",
      "40  Sensor_41             23.30            67                       98   \n",
      "41  Sensor_42             29.96            45                      158   \n",
      "42  Sensor_43             25.14            41                      188   \n",
      "43  Sensor_44             27.63            67                      112   \n",
      "44  Sensor_45             23.91            77                      189   \n",
      "45  Sensor_46             21.03            50                       61   \n",
      "46  Sensor_47             29.86            71                      117   \n",
      "47  Sensor_48             17.10            58                      157   \n",
      "48  Sensor_49             16.75            54                      143   \n",
      "49  Sensor_50             25.55            60                       98   \n",
      "\n",
      "              Timestamp  co2 level (CO2)  \n",
      "0   2025-05-29 15:46:03              160  \n",
      "1   2025-05-29 15:46:05              383  \n",
      "2   2025-05-29 15:46:07              178  \n",
      "3   2025-05-29 15:46:09               77  \n",
      "4   2025-05-29 15:46:11               84  \n",
      "5   2025-05-29 15:46:13              191  \n",
      "6   2025-05-29 15:46:15              183  \n",
      "7   2025-05-29 15:46:17              388  \n",
      "8   2025-05-29 15:46:19              113  \n",
      "9   2025-05-29 15:46:21              228  \n",
      "10  2025-05-29 15:46:23               86  \n",
      "11  2025-05-29 15:46:25              420  \n",
      "12  2025-05-29 15:46:27              295  \n",
      "13  2025-05-29 15:46:29              268  \n",
      "14  2025-05-29 15:46:31              386  \n",
      "15  2025-05-29 15:46:33              359  \n",
      "16  2025-05-29 15:46:35              166  \n",
      "17  2025-05-29 15:46:37              249  \n",
      "18  2025-05-29 15:46:39               78  \n",
      "19  2025-05-29 15:46:41              206  \n",
      "20  2025-05-29 15:46:43              221  \n",
      "21  2025-05-29 15:46:45              419  \n",
      "22  2025-05-29 15:46:47              220  \n",
      "23  2025-05-29 15:46:49              337  \n",
      "24  2025-05-29 15:46:51              339  \n",
      "25  2025-05-29 15:46:53              124  \n",
      "26  2025-05-29 15:46:55              150  \n",
      "27  2025-05-29 15:46:57              221  \n",
      "28  2025-05-29 15:46:59              133  \n",
      "29  2025-05-29 15:47:01              333  \n",
      "30  2025-05-29 15:47:03              217  \n",
      "31  2025-05-29 15:47:05              261  \n",
      "32  2025-05-29 15:47:07              153  \n",
      "33  2025-05-29 15:47:09              313  \n",
      "34  2025-05-29 15:47:11              188  \n",
      "35  2025-05-29 15:47:13              360  \n",
      "36  2025-05-29 15:47:15              265  \n",
      "37  2025-05-29 15:47:17              280  \n",
      "38  2025-05-29 15:47:19              242  \n",
      "39  2025-05-29 15:47:21              188  \n",
      "40  2025-05-29 15:47:23              199  \n",
      "41  2025-05-29 15:47:25              117  \n",
      "42  2025-05-29 15:47:27              226  \n",
      "43  2025-05-29 15:47:29              353  \n",
      "44  2025-05-29 15:47:31              242  \n",
      "45  2025-05-29 15:47:33              399  \n",
      "46  2025-05-29 15:47:35              386  \n",
      "47  2025-05-29 15:47:37               85  \n",
      "48  2025-05-29 15:47:39              161  \n",
      "49  2025-05-29 15:47:41              168  \n"
     ]
    }
   ],
   "source": [
    "import random\n",
    "import time\n",
    "import pandas as pd\n",
    "\n",
    "\n",
    "# Function to simulate IoT sensor data\n",
    "def generate_iot_data(samples=10):\n",
    "    \"\"\"\n",
    "    Generates simulated IoT sensor data including temperature, humidity, and air quality index.\n",
    "   \n",
    "    Parameters:\n",
    "    samples (int): Number of data points to generate.\n",
    "   \n",
    "    Returns:\n",
    "    pd.DataFrame: A DataFrame containing simulated IoT data.\n",
    "    \"\"\"\n",
    "    data = []\n",
    "    for i in range(samples):\n",
    "        sensor_id = f\"Sensor_{i+1}\"\n",
    "        temperature = round(random.uniform(16.0, 30.0), 2)  # Temperature in Celsius\n",
    "        humidity = random.randint(40, 80)  # Humidity percentage\n",
    "        air_quality = random.randint(50, 200)  # AQI Index\n",
    "        timestamp = time.strftime('%Y-%m-%d %H:%M:%S')  # Current timestamp\n",
    "        co2_level = random.randint(69, 420)  # CO2 levels in parts per million\n",
    "        \n",
    "        data.append([sensor_id, temperature, humidity, air_quality, timestamp, co2_level])\n",
    "        time.sleep(2)  # Simulate real-time data collection\n",
    "   \n",
    "    return pd.DataFrame(data, columns=[\"Sensor ID\", \"Temperature (°C)\", \"Humidity (%)\", \"Air Quality Index (AQI)\", \"Timestamp\", \"co2 level (CO2)\"])\n",
    "\n",
    "\n",
    "# Generate and display simulated IoT data\n",
    "iot_data = generate_iot_data(50)\n",
    "print(iot_data)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "84a19ce9-90ed-4fd3-983b-ca1f32993e0c",
   "metadata": {},
   "outputs": [],
   "source": [
    "iot_data.to_csv(\"iot_data.csv\", index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "916434c7-456e-4cc8-9481-36cbf14496ae",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
